<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ /*******************************************************************************
  ~  *
  ~  * Pentaho Big Data
  ~  *
  ~  * Copyright (C) 2002-2018 by Hitachi Vantara : http://www.pentaho.com
  ~  *
  ~  *******************************************************************************
  ~  *
  ~  * Licensed under the Apache License, Version 2.0 (the "License");
  ~  * you may not use this file except in compliance with
  ~  * the License. You may obtain a copy of the License at
  ~  *
  ~  *    http://www.apache.org/licenses/LICENSE-2.0
  ~  *
  ~  * Unless required by applicable law or agreed to in writing, software
  ~  * distributed under the License is distributed on an "AS IS" BASIS,
  ~  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  * See the License for the specific language governing permissions and
  ~  * limitations under the License.
  ~  *
  ~  ******************************************************************************/
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>health-checker-tool</artifactId>
        <groupId>com.epam</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>health-checker-tool-controller</artifactId>

    <dependencies>
        <!--Modules-->
        <dependency>
            <groupId>com.epam</groupId>
            <artifactId>health-checker-tool-frontend</artifactId>
            <version>${project.version}</version>
            <type>zip</type>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.epam</groupId>
            <artifactId>health-checker-tool-facade-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.epam</groupId>
            <artifactId>health-checker-tool-facade-model</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.epam</groupId>
            <artifactId>health-checker-tool-facade-scheduler</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.epam</groupId>
            <artifactId>health-checker-tool-facade-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.epam</groupId>
            <artifactId>health-checker-tool-facade-cdh</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.epam</groupId>
            <artifactId>health-checker-tool-facade-hdp</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!--Spring-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!--Logging-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${org.springframework.boot}</version>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.epam</groupId>
                                    <artifactId>health-checker-tool-frontend</artifactId>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <executions>
                    <execution>
                        <id>pkg</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- Configures the used assembly descriptor -->
                    <descriptors>
                        <descriptor>src/main/assembly/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <!--
                Exclude application.properties inside the JAR, this will be external in the conf directory so the end
                user can modify it.  Other JARs will be along side this one in the lib directory, but this will be referenced
                via the daemon.sh script in the assembly.
                -->
                <configuration>
                    <excludes>
                        <exclude>application.properties</exclude>
                        <exclude>clusters.json</exclude>
                    </excludes>
                    <archive>
                        <manifest>
                            <!-- Adds the classpath to the created manifest -->
                            <addClasspath>true</addClasspath>
                            <!--
                                Specifies that all dependencies of our application are found
                                from the lib directory.
                            -->
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.epam.health.tool.HealthCheckerToolApplication</mainClass>
                        </manifest>
                        <manifestEntries>
                            <Class-Path>conf/</Class-Path>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>